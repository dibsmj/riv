<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0"
    xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
    xmlns:s="http://www.sitemaps.org/schemas/sitemap/0.9"
    exclude-result-prefixes="s">

    <!-- Template to match the root element -->
    <xsl:template match="/">
        <html>
            <head>
                <title>XML Sitemap</title>
                <style>
                    body {
                        font-family: Arial, sans-serif;
                        font-size: 14px;
                    }
                    h1 {
                        color: #333;
                        font-size: 24px;
                    }
                    table {
                        width: 100%;
                        border-collapse: collapse;
                        margin-top: 20px;
                    }
                    th, td {
                        border: 1px solid #ddd;
                        padding: 8px;
                        text-align: left;
                        font-size: 12px;
                    }
                    th {
                        background-color: #f2f2f2;
                        font-size: 14px;
                    }
                    tr:hover {
                        background-color: #f5f5f5;
                    }
                </style>
            </head>
            <body>
                <h1>XML Sitemap</h1>
                <p>Generated by rivexa, this is an XML Sitemap, meant for consumption by search engines.</p>
                <p>You can find more information about XML sitemaps on <a href="https://sitemaps.org">sitemaps.org</a>.</p>
                <p>This XML Sitemap contains <xsl:value-of select="count(/s:urlset/s:url)"/> URLs.</p>
                <table>
                    <tr>
                        <th>URL</th>
                        <th>Last Modified</th>
                    </tr>
                    <xsl:for-each select="/s:urlset/s:url">
                        <tr>
                            <td><a href="{s:loc}"><xsl:value-of select="s:loc"/></a></td>
                            <td><xsl:call-template name="formatDateTime">
                                <xsl:with-param name="isoDateTime" select="s:lastmod"/>
                            </xsl:call-template></td>
                        </tr>
                    </xsl:for-each>
                </table>
            </body>
        </html>
    </xsl:template>

    <!-- Template to format the date and time -->
    <xsl:template name="formatDateTime">
        <xsl:param name="isoDateTime"/>
        
        <!-- Extract components from the ISO date -->
        <xsl:variable name="year" select="substring($isoDateTime, 1, 4)"/>
        <xsl:variable name="month" select="substring($isoDateTime, 6, 2)"/>
        <xsl:variable name="day" select="substring($isoDateTime, 9, 2)"/>
        <xsl:variable name="hour" select="substring($isoDateTime, 12, 2)"/>
        <xsl:variable name="minute" select="substring($isoDateTime, 15, 2)"/>
        <xsl:variable name="second" select="substring($isoDateTime, 18, 2)"/>
        <xsl:variable name="timezone" select="substring($isoDateTime, 20)"/>
        
        <!-- Convert 24-hour time to 12-hour time with am/pm -->
        <xsl:variable name="hour12">
            <xsl:choose>
                <xsl:when test="$hour &gt; 12">
                    <xsl:value-of select="$hour - 12"/>
                </xsl:when>
                <xsl:when test="$hour = 00">
                    <xsl:value-of select="12"/>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:value-of select="$hour"/>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:variable name="amPm">
            <xsl:choose>
                <xsl:when test="$hour &gt;= 12">pm</xsl:when>
                <xsl:otherwise>am</xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        
        <!-- Convert month number to month name -->
        <xsl:variable name="monthName">
            <xsl:choose>
                <xsl:when test="$month = '01'">Jan</xsl:when>
                <xsl:when test="$month = '02'">Feb</xsl:when>
                <xsl:when test="$month = '03'">Mar</xsl:when>
                <xsl:when test="$month = '04'">Apr</xsl:when>
                <xsl:when test="$month = '05'">May</xsl:when>
                <xsl:when test="$month = '06'">Jun</xsl:when>
                <xsl:when test="$month = '07'">Jul</xsl:when>
                <xsl:when test="$month = '08'">Aug</xsl:when>
                <xsl:when test="$month = '09'">Sep</xsl:when>
                <xsl:when test="$month = '10'">Oct</xsl:when>
                <xsl:when test="$month = '11'">Nov</xsl:when>
                <xsl:when test="$month = '12'">Dec</xsl:when>
            </xsl:choose>
        </xsl:variable>
        
        <!-- Output the formatted date -->
        <xsl:value-of select="concat($monthName, ' ', $day, ', ', $year)"/>
        <!-- <xsl:value-of select="concat($monthName, ' ', $day, ', ', $year, ', ', $hour12, ':', $minute, ':', $second, ' ', $amPm, ', UTC')"/> -->
    </xsl:template>
</xsl:stylesheet>
